{
  "version": 3,
  "sources": ["empty-module:./session-storage/theme-storage.server", "../../src/app/root.tsx", "../../src/app/components/toast/toast.tsx"],
  "sourcesContent": ["module.exports = {};", "import { CSSProperties, useEffect } from \"react\";\nimport type { LoaderFunction, V2_MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useFetcher,\n  useLoaderData } from\n\"@remix-run/react\";\nimport cx from \"classix\";\nimport {\n  Theme,\n  Preference,\n  ThemeProvider,\n  useTheme } from\n\"@app/store/theme.store\";\nimport { formatTags, formatProperties } from \"@utils/meta\";\nimport { getThemeSession } from \"./session-storage/theme-storage.server\";\nimport { Toast } from \"./components/toast\";\nimport { Error404 } from \"./components/error-404\";\nimport { Error500 } from \"./components/error-500\";\nimport styles from \"./styles/app-compiled.css\";\nimport fonts from \"./styles/fonts.css\";\nimport fuck from \"react-toastify/dist/ReactToastify.css\";\n\nexport const links = () => {\n  return [\n  { rel: \"stylesheet\", href: fonts },\n  { rel: \"stylesheet\", href: styles },\n  { rel: \"stylesheet\", href: fuck },\n  { rel: \"icon\", type: \"image/x-icon\", href: \"/favicon.ico\" }];\n\n};\n\nexport const meta: V2_MetaFunction = () => {\n  const title = \"Jira clone\";\n  const description =\n  \"Task manager application inspired in Jira. Side project made with Remix, React, Tailwind, TypeScript and more.\";\n  const image =\n  \"https://jira-clone.fly.dev/static/images/select-theme-light.png\";\n  const url = \"https://jira-clone.fly.dev\";\n\n  const tags = {\n    charset: \"utf-8\",\n    viewport: \"width=device-width,initial-scale=1\",\n    title: title,\n    description: description,\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:site\": url,\n    \"twitter:domain\": \"jira-clone.fly.dev\",\n    \"twitter:title\": title,\n    \"twitter:description\": description,\n    \"twitter:image\": image,\n    \"twitter:image:width\": \"951\",\n    \"twitter:image:height\": \"696\",\n    \"twitter:image:alt\": title,\n    \"twitter:creator\": \"@Jack_DanielSG\",\n    \"twitter:creator:id\": \"Jack_DanielSG\"\n  };\n\n  const properties = {\n    \"og:url\": url,\n    \"og:type\": \"website\",\n    \"og:site_name\": title,\n    \"og:title\": title,\n    \"og:description\": description,\n    \"og:image\": image\n  };\n\n  return [...formatTags(tags), ...formatProperties(properties)];\n};\n\ntype LoaderData = {\n  theme?: Theme;\n  preference?: Preference;\n};\nexport const loader: LoaderFunction = async ({ request }) => {\n  const themeSession = await getThemeSession(request);\n  const { theme, preference } = themeSession.getTheme();\n  return json<LoaderData>({ theme, preference });\n};\n\nexport default function AppWithProviders() {\n  const { theme, preference } = useLoaderData<LoaderData>();\n  return (\n    <ThemeProvider specifiedTheme={theme} specifiedPreference={preference}>\n      <App />\n    </ThemeProvider>);\n\n}\n\nconst App = (): JSX.Element => {\n  const loaderData = useLoaderData<LoaderData>();\n  const { theme: sessionTheme, preference: sessionPreference } = loaderData;\n  const { theme } = useTheme();\n  const fetcher = useFetcher();\n\n  useEffect(() => {\n    // To avoid missmatch between server and client, theme is loaded\n    // from cookie session. On the first visit, the theme is not stored\n    // in the session, so we got it from system preference and set it.\n    // Next time, the theme will be loaded from session and this won't run.\n    if (sessionTheme && sessionPreference === Preference.SELECTED) return;\n\n    const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").\n    matches ?\n    Theme.DARK :\n    Theme.LIGHT;\n\n    fetcher.submit(\n      { theme: systemTheme, preference: Preference.SYSTEM },\n      { action: \"action/set-theme\", method: \"post\" }\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <html lang=\"en\" className={cx(\"h-full\", theme)}>\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full bg-elevation-surface font-primary text-font\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n        <Toast theme={theme || Theme.LIGHT} />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: !sessionTheme ?\n            `\n                (function () {\n                  if (typeof window === 'undefined') return;\n\n                  const isSystemThemeDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n                    \n                  if (isSystemThemeDark) {\n                    const htmlElement = document.documentElement;\n                    htmlElement.classList.add('dark');\n                  }\n                })();\n              ` :\n            \"\"\n          }} />\n\n      </body>\n    </html>);\n\n};\n\nconst errorComponentStyle: CSSProperties = {\n  maxWidth: \"500px\",\n  width: \"80%\",\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  textAlign: \"center\",\n  color: \"#0052cc\",\n  fontFamily: \"sans-serif\",\n  fontWeight: \"bold\"\n};\n\nexport function ErrorBoundary({ error }: {error: Error;}) {\n  console.error(error);\n  const errorMessage =\n  \"It seems there is a critical error! Please try again or contact me at: danielserrano.contacto@gmail.com\";\n\n  return (\n    // Inline styles because tailwind is not loaded at this point\n    <div style={errorComponentStyle}>\n      <Error500 message={errorMessage} href=\"/\" />\n    </div>);\n\n}\n\nexport function CatchBoundary() {\n  return (\n    <html>\n      <head>\n        <title>Oops! Not found</title>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div style={errorComponentStyle}>\n          <Error404\n            message=\"It seems that you have lost! Go to the main page\"\n            href=\"/\" />\n\n        </div>\n      </body>\n    </html>);\n\n}", "import { ToastContainer } from \"react-toastify\";\nimport { Theme } from \"@app/store/theme.store\";\n\nexport const Toast = ({ theme }: Props) => {\n  const toastTheme = theme === \"light\" ? \"light\" : \"dark\";\n\n  return (\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      theme={toastTheme}\n    />\n  );\n};\n\ninterface Props {\n  theme: Theme;\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
