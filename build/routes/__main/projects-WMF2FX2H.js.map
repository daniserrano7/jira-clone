{
  "version": 3,
  "sources": ["../../../../src/app/routes/__main/projects.tsx", "../../../../src/domain/category/category.mock.ts", "../../../../src/domain/project/project.mock.ts", "../../../../src/app/ui/main/projects/projects.view.tsx"],
  "sourcesContent": ["import type {\n  LoaderFunction,\n  ActionFunction,\n  V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { ProjectId, ProjectSummary } from \"@domain/project\";\nimport { getProjectsSummary, deleteProject } from \"@infrastructure/db/project\";\nimport { getUserSession } from \"@app/session-storage\";\nimport { ProjectsView } from \"@app/ui/main/projects\";\nimport { formatTags, formatProperties } from \"@utils/meta\";\n\nexport const meta: V2_MetaFunction = () => {\n  const title = \"Jira clone - Projects\";\n  const description =\n    \"See all your projects in one place. Create new ones and assigne team members.\";\n  const image = \"https://jira-clone.fly.dev/static/images/readme/projects.png\";\n  const url = \"https://jira-clone.fly.dev/projects\";\n\n  const tags = {\n    charset: \"utf-8\",\n    viewport: \"width=device-width,initial-scale=1\",\n    title: title,\n    description: description,\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:site\": url,\n    \"twitter:domain\": \"jira-clone.fly.dev\",\n    \"twitter:title\": title,\n    \"twitter:description\": description,\n    \"twitter:image\": image,\n    \"twitter:image:width\": \"1297\",\n    \"twitter:image:height\": \"635\",\n    \"twitter:image:alt\": title,\n    \"twitter:creator\": \"@Jack_DanielSG\",\n    \"twitter:creator:id\": \"Jack_DanielSG\",\n  };\n\n  const properties = {\n    \"og:url\": url,\n    \"og:type\": \"website\",\n    \"og:site_name\": title,\n    \"og:title\": title,\n    \"og:description\": description,\n    \"og:image\": image,\n  };\n\n  return [...formatTags(tags), ...formatProperties(properties)];\n};\n\ntype LoaderData = {\n  projectsSummary: ProjectSummary[];\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userSession = await getUserSession(request);\n  const userId = userSession.getUser();\n\n  if (!userId) {\n    return redirect(\"/login\");\n  }\n\n  const projectsSummary = await getProjectsSummary(userId);\n\n  return json<LoaderData>({ projectsSummary });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const _action = formData.get(\"_action\") as string;\n\n  if (_action === \"delete\") {\n    const projectId = formData.get(\"projectId\") as ProjectId;\n\n    projectId\n      ? await deleteProject(projectId)\n      : console.error(\"Project id not found: \", projectId);\n  }\n  return redirect(\"/projects\");\n};\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <div className=\"h-full w-full text-center\">\n      <h1 className=\"mt-[200px] mb-6 text-lg\">/projects ERROR</h1>\n      <a href=\"/\" className=\"text-primary-main hover:underline\">\n        Navigate to home\n      </a>\n    </div>\n  );\n}\n\nexport default function ProjectsRoute() {\n  const { projectsSummary } = useLoaderData() as LoaderData;\n  return <ProjectsView projectsSummary={projectsSummary} />;\n}\n", "import { Category, categoryTypes, categoryTypeDict } from \"@domain/category\";\nimport {\n  todoIssuesMock1,\n  inProgressIssuesMock1,\n  doneIssuesMock1,\n  todoIssuesMock2,\n  inProgressIssuesMock2,\n  doneIssuesMock2,\n} from \"@domain/issue\";\n\nconst createdAt = new Date(\"2022-01-01\").valueOf();\nconst updatedAt = new Date(\"2022-01-01\").valueOf();\n\nconst ids1 = [\n  \"1e8877a7-91dc-46de-bce0-f077ad922fc8\",\n  \"46964edd-62e0-4c2f-90bf-e275ee087433\",\n  \"c1278ad3-29b3-422c-8219-54bb66b26ff4\",\n];\nconst issuesMock1 = [todoIssuesMock1, inProgressIssuesMock1, doneIssuesMock1];\n\nconst ids2 = [\n  \"bbb348d5-ef02-447c-94f5-5fbf1ceeac07\",\n  \"14055a19-1a79-4b16-90fb-811652e33128\",\n  \"aa102bcb-335c-4d82-8392-058f6172ebe8\",\n];\nconst issuesMock2 = [todoIssuesMock2, inProgressIssuesMock2, doneIssuesMock2];\n\nexport const categoriesMock1: Category[] = categoryTypes.map((categoryType, index) => {\n  const id = ids1[index];\n  const name = categoryTypeDict[categoryType];\n  const type = categoryType;\n  const order = index;\n  const issues = issuesMock1[index];\n\n  return {\n    id,\n    name,\n    issues,\n    type,\n    order,\n    createdAt,\n    updatedAt,\n  };\n});\n\nexport const categoriesMock2: Category[] = categoryTypes.map((categoryType, index) => {\n  const id = ids2[index];\n  const name = categoryTypeDict[categoryType];\n  const type = categoryType;\n  const order = index;\n  const issues = issuesMock2[index];\n\n  return {\n    id,\n    name,\n    type,\n    issues,\n    order,\n    createdAt,\n    updatedAt,\n  };\n});\n", "import { Project } from \"./project\";\nimport { usersMock } from \"@domain/user\";\nimport { categoriesMock1, categoriesMock2 } from \"@domain/category\";\n\nexport const projectMock1: Project = {\n  id: \"jira-clone\",\n  name: \"JIRA Clone\",\n  description: \"Software project\",\n  users: usersMock,\n  categories: categoriesMock1,\n  image:\n    \"https://admin.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10400?size=xxlarge\",\n  createdAt: new Date(\"2023-01-01 10:00\").valueOf(),\n};\n\nexport const projectMock2: Project = {\n  id: \"second-project\",\n  name: \"Second project\",\n  description:\n    \"Super long description to test how it clamps on project card in the projects page and in the project sidebar\",\n  users: usersMock.slice(0, 3), // Only the first 3 users\n  categories: categoriesMock2,\n  image:\n    \"https://admin.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10401?size=xxlarge\",\n  createdAt: new Date(\"2023-01-01 11:00\").valueOf(),\n};\n\nexport const projectsMock: Project[] = [projectMock1, projectMock2];\n", "import { Link, Outlet, Form } from \"@remix-run/react\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { MdDeleteOutline } from \"react-icons/md\";\nimport cx from \"classix\";\nimport { ProjectId, ProjectSummary, projectsMock } from \"@domain/project\";\nimport * as AlertDialog from \"@app/components/alert-dialog\";\nimport { Button } from \"@app/components/button\";\n\nconst defaultProjectsIds: ProjectId[] = projectsMock.map(\n  (projectMock) => projectMock.id\n);\n\nexport const ProjectsView = ({\n  projectsSummary,\n}: ProjectsViewProps): JSX.Element => {\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"font-primary-black text-2xl\">PROJECTS</h1>\n      <div className=\"mt-8\">\n        <Link to=\"new\" className=\"flex w-fit\">\n          <Button color=\"neutral\" variant=\"subtlest\" className=\"py-3 pl-3 pr-4\">\n            <span>\n              <AiOutlinePlus size={22} />\n            </span>\n            <span className=\"leading-4\">Add Project</span>\n          </Button>\n        </Link>\n      </div>\n      <div className=\"4 mt-4 grid grid-cols-auto-400 gap-8\">\n        {projectsSummary.map((project) => (\n          <ProjectCard key={project.id} project={project} />\n        ))}\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\ninterface ProjectsViewProps {\n  projectsSummary: ProjectSummary[];\n}\n\nconst ProjectCard = ({ project }: ProjectCardProps): JSX.Element => {\n  const isDefaultProject = defaultProjectsIds.includes(project.id);\n\n  return (\n    <div className=\"w-[400px]\">\n      <Link\n        to={project.id}\n        className={cx(\n          \"group flex h-[112px] rounded bg-elevation-surface-raised shadow-sm outline outline-2 outline-transparent duration-100 ease-linear\",\n          \"hover:-translate-y-0.5 hover:bg-background-brand-subtlest-hovered hover:text-font-brand hover:shadow-md hover:outline-border-brand\"\n        )}\n      >\n        <img\n          src={project.image || \"/images/default-project.png\"}\n          alt=\"Project\"\n          width=\"90px\"\n          height=\"104px\"\n          className=\"h-auto w-[90px] rounded-l object-cover\"\n        />\n        <div className=\"flex flex-col gap-1 px-3 pb-4 pt-2\">\n          <h2 className=\"text-lg\">{project.name}</h2>\n          <h3 className=\"line-clamp-2 min-h-[40px] font-primary-light text-sm text-font-subtle text-opacity-100\">\n            {project.description}\n          </h3>\n        </div>\n      </Link>\n      <AlertDialog.Root>\n        <AlertDialog.Trigger\n          className={cx(\n            \"mt-1 flex items-center gap-1 border-none text-sm\",\n            isDefaultProject\n              ? \"cursor-not-allowed text-font-disabled text-opacity-50\"\n              : \"text-icon hover:text-font-danger\"\n          )}\n          aria-label=\"Open delete issue dialog\"\n          title={\n            isDefaultProject\n              ? \"Cannot delete default project\"\n              : \"Delete project\"\n          }\n          disabled={isDefaultProject}\n        >\n          <MdDeleteOutline size={15} />\n          Delete project\n        </AlertDialog.Trigger>\n\n        <AlertDialog.Portal>\n          <AlertDialog.Overlay />\n          <AlertDialog.Content>\n            <AlertDialog.Title>Delete issue?</AlertDialog.Title>\n            <AlertDialog.Description>\n              This action is permanent and cannot be undone. Are you sure you\n              want to remove this issue completely?\n            </AlertDialog.Description>\n            <Form\n              method=\"delete\"\n              className=\"mt-8 flex w-full justify-end gap-4\"\n            >\n              <AlertDialog.Cancel aria-label=\"Cancel\">\n                Cancel\n              </AlertDialog.Cancel>\n              <AlertDialog.Action\n                name=\"_action\"\n                value=\"delete\"\n                type=\"submit\"\n                aria-label=\"Delete issue\"\n              >\n                Delete\n              </AlertDialog.Action>\n              <input type=\"hidden\" name=\"projectId\" value={project.id} />\n            </Form>\n          </AlertDialog.Content>\n        </AlertDialog.Portal>\n      </AlertDialog.Root>\n    </div>\n  );\n};\n\ninterface ProjectCardProps {\n  project: ProjectSummary;\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
