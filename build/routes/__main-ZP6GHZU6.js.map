{
  "version": 3,
  "sources": ["empty-module:@app/session-storage/user-storage.server", "../../../src/app/routes/__main.tsx", "../../../src/app/ui/main/header/select-theme.tsx", "../../../src/app/ui/main/header/user-profile.tsx", "../../../src/app/ui/main/header/header.tsx", "../../../src/app/ui/main/main.layout.tsx"],
  "sourcesContent": ["module.exports = {};", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { User } from \"@domain/user\";\nimport { getUserSession } from \"@app/session-storage/user-storage.server\";\nimport { getUser } from \"@infrastructure/db/user\";\nimport { MainLayout } from \"@app/ui/main\";\n\ntype LoaderData = {\n  user: User;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userSession = await getUserSession(request);\n  const userId = userSession.getUser();\n\n  if (!userId) {\n    return redirect(\"/login\");\n  }\n\n  const user = await getUser(userId);\n\n  if (!user) {\n    throw new Response(\"Not Found\", {\n      status: 404,\n    });\n  }\n\n  return json<LoaderData>({\n    user: user,\n  });\n};\n\nexport default function AppRoute() {\n  const { user } = useLoaderData() as LoaderData;\n  return <MainLayout user={user} />;\n}\n", "import * as DropdownMenu from \"@radix-ui/react-dropdown-menu\";\nimport { MdLightMode, MdDarkMode } from \"react-icons/md\";\nimport cx from \"classix\";\nimport {\n  Theme,\n  Preference,\n  useTheme,\n  isValidTheme,\n  isValidPreference,\n  getSystemTheme,\n  DEFAULT_THEME,\n} from \"@app/store/theme.store\";\nimport { Tooltip } from \"@app/components/tooltip\";\n\nexport const SelctTheme = (): JSX.Element => {\n  const { theme, setTheme, preference } = useTheme();\n\n  const themeOptions: {\n    value: Theme | Preference.SYSTEM;\n    label: string;\n    image: string;\n  }[] = [\n    {\n      value: Theme.LIGHT,\n      label: \"Light\",\n      image: \"/images/select-theme-light.png\",\n    },\n    {\n      value: Theme.DARK,\n      label: \"Dark\",\n      image: \"/images/select-theme-dark.png\",\n    },\n    {\n      value: Theme.LAVA,\n      label: \"Lava\",\n      image: \"/images/select-theme-dark.png\",\n    },\n    {\n      value: Theme.LIME,\n      label: \"Lime\",\n      image: \"/images/select-theme-dark.png\",\n    },\n    {\n      value: Preference.SYSTEM,\n      label: \"System\",\n      image: \"/images/select-theme-system.png\",\n    },\n  ];\n  const currentValue = preference === Preference.SYSTEM ? preference : theme;\n  const triggerIconClass = cx(\"fill-icon group-hover:fill-icon-brand\");\n\n  const selectTheme = (value: string): void => {\n    if (isValidPreference(value)) {\n      setTheme(getSystemTheme(), value as Preference);\n    }\n\n    if (isValidTheme(value)) {\n      setTheme(value as Theme, Preference.SELECTED);\n    }\n  };\n\n  return (\n    <DropdownMenu.Root>\n      <Tooltip title=\"Select theme\">\n        <DropdownMenu.Trigger\n          aria-label=\"Open theme select\"\n          className=\"group flex h-[30px] w-[30px] rounded-full outline outline-2 outline-icon flex-center hover:bg-background-brand-subtlest hover:outline-border-brand\"\n        >\n          {theme === Theme.LIGHT ? (\n            <MdLightMode className={triggerIconClass} />\n          ) : (\n            <MdDarkMode className={triggerIconClass} />\n          )}\n        </DropdownMenu.Trigger>\n      </Tooltip>\n      <DropdownMenu.Portal>\n        <DropdownMenu.Content\n          align=\"end\"\n          sideOffset={5}\n          className=\"z-50 origin-top-right rounded bg-elevation-surface-overlay p-3 shadow-md radix-side-bottom:animate-slide-down radix-side-top:animate-slide-up\"\n        >\n          <DropdownMenu.Label className=\"select-none pb-2 text-lg\">\n            Select theme\n          </DropdownMenu.Label>\n          <DropdownMenu.RadioGroup\n            value={currentValue || DEFAULT_THEME}\n            onValueChange={selectTheme}\n            className={cx(\n              \"grid gap-2\",\n              themeOptions.length > 6\n                ? \"grid-cols-3\"\n                : themeOptions.length > 3\n                ? \"grid-cols-2\"\n                : \"grid-cols-1\"\n            )}\n          >\n            {themeOptions.map(({ value, label, image }) => (\n              <DropdownMenu.RadioItem\n                key={value}\n                value={value}\n                className={cx(\n                  \"group flex gap-4 rounded px-2 pb-2 pt-1 outline outline-2 hover:outline-border-brand\",\n                  value === currentValue\n                    ? \"bg-background-brand-subtlest text-font-brand outline-border-brand\"\n                    : \"outline-transparent\"\n                )}\n              >\n                <span\n                  className={cx(\n                    \"border-1 mt-1 flex h-4 w-4 rounded-full border flex-center group-hover:border-border-brand\",\n                    value === currentValue\n                      ? \"border-border-brand\"\n                      : \"border-border-disabled\"\n                  )}\n                >\n                  <span\n                    className={cx(\n                      \"h-2 w-2 rounded-full bg-background-brand-bold\",\n                      value === currentValue ? \"block\" : \"hidden\"\n                    )}\n                  />\n                </span>\n                <div>\n                  <span className=\"text-sm\">{label}</span>\n                  <img\n                    src={image}\n                    alt={`${label} theme`}\n                    className=\"h-[100px] w-[180px] rounded border-2 border-border-disabled object-cover\"\n                  />\n                </div>\n              </DropdownMenu.RadioItem>\n            ))}\n          </DropdownMenu.RadioGroup>\n        </DropdownMenu.Content>\n      </DropdownMenu.Portal>\n    </DropdownMenu.Root>\n  );\n};\n", "import { Form } from \"@remix-run/react\";\nimport * as DropdownMenu from \"@radix-ui/react-dropdown-menu\";\nimport { FaPowerOff } from \"react-icons/fa\";\nimport cx from \"classix\";\nimport { useUserStore } from \"@app/store/user.store\";\nimport { UserAvatar } from \"@app/components/user-avatar\";\nimport { Button } from \"@app/components/button\";\n\nexport const UserProfile = (): JSX.Element => {\n  const { user } = useUserStore();\n\n  return (\n    <DropdownMenu.Root>\n      <DropdownMenu.Trigger className=\"ml-1 rounded-full outline outline-2 outline-border-disabled hover:outline-border-brand\">\n        <UserAvatar {...user} />\n      </DropdownMenu.Trigger>\n      <DropdownMenu.Portal>\n        <DropdownMenu.Content\n          align=\"end\"\n          sideOffset={5}\n          className={cx(\n            \"z-50 rounded bg-elevation-surface-overlay shadow-md\",\n            \"radix-side-bottom:animate-slide-down radix-side-top:animate-slide-up\"\n          )}\n        >\n          <DropdownMenu.Item className=\"flex flex-col items-center p-3 !outline-none\">\n            <UserAvatar {...user} size={80} />\n            <span className=\"mt-2 text-lg\">{user.name}</span>\n          </DropdownMenu.Item>\n          <DropdownMenu.Separator className=\"h-px bg-border\" />\n          <DropdownMenu.Item className=\"select-none p-1 !outline-none\">\n            <Form action=\"action/logout\" method=\"post\">\n              <Button\n                color=\"danger\"\n                variant=\"subtlest\"\n                type=\"submit\"\n                onClick={(e) => e.stopPropagation()} // To prevent dropdown menu from closing\n                className=\"w-full\"\n                // className=\"flex w-full items-center gap-2 rounded bg-transparent p-2 text-sm text-font-danger hover:bg-background-danger-hovered active:bg-background-danger-pressed\"\n                aria-label=\"Log out\"\n              >\n                <FaPowerOff />\n                <span>Log out</span>\n              </Button>\n            </Form>\n          </DropdownMenu.Item>\n        </DropdownMenu.Content>\n      </DropdownMenu.Portal>\n    </DropdownMenu.Root>\n  );\n};\n", "import { Link } from \"@remix-run/react\";\nimport cx from \"classix\";\nimport { HiQuestionMarkCircle } from \"react-icons/hi\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { Tooltip } from \"@app/components/tooltip\";\nimport { SelctTheme } from \"./select-theme\";\nimport { UserProfile } from \"./user-profile\";\n\nexport const Header = (): JSX.Element => {\n  const iconBaseClass =\n    \"w-[24px] h-[24px] rounded-full flex items-center justify-center hover:bg-background-brand-subtlest hover:text-icon-brand\";\n\n  return (\n    <header className=\"relative z-10 flex w-full items-center justify-between bg-elevation-surface-raised px-5 py-2 shadow-[0_1px_5px_-1px_rgba(0,0,0,0.3)]\">\n      <section>\n        <Link\n          to=\"/\"\n          className=\"flex cursor-pointer items-center rounded px-3 py-2 hover:bg-background-brand-subtlest hover:text-font-brand\"\n        >\n          <img src=\"/images/logo.png\" width={24} height={24} alt=\"Logo\" />\n          <span className=\"ml-2\">Jira Clone</span>\n        </Link>\n      </section>\n      <section className=\"flex items-center gap-4\">\n        <Tooltip title=\"About\">\n          <button\n            aria-label=\"About this website\"\n            disabled\n            className={cx(iconBaseClass, \"cursor-not-allowed\")}\n          >\n            <HiQuestionMarkCircle size={24} />\n          </button>\n        </Tooltip>\n        <Tooltip title=\"Github\">\n          <a\n            href=\"https://github.com/daniserrano7/jira-clone\"\n            className={iconBaseClass}\n            aria-label=\"Go to my Github\"\n          >\n            <AiFillGithub size={24} />\n          </a>\n        </Tooltip>\n        <SelctTheme />\n        <UserProfile />\n      </section>\n    </header>\n  );\n};\n", "import { Outlet } from \"@remix-run/react\";\nimport { User } from \"@domain/user\";\nimport { UserContextProvider } from \"@app/store/user.store\";\nimport { Header } from \"./header\";\n\nexport const MainLayout = ({ user }: Props) => {\n  return (\n    <UserContextProvider user={user}>\n      <div className=\"flex h-full flex-col\">\n        <Header />\n        <Outlet />\n      </div>\n    </UserContextProvider>\n  );\n};\n\ninterface Props {\n  user: User;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACClB,kBAA+B;AAG/B,0BAA+B;;;ACiEnB;AAvDL,IAAM,aAAa,MAAmB;AAC3C,QAAM,EAAE,OAAO,UAAU,WAAW,IAAI,SAAS;AAEjD,QAAM,eAIA;AAAA,IACJ;AAAA,MACE;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,EACF;AACA,QAAM,eAAe,uCAAmC,aAAa;AACrE,QAAM,mBAAmB,EAAG,uCAAuC;AAEnE,QAAM,cAAc,CAAC,UAAwB;AAC3C,QAAI,kBAAkB,KAAK,GAAG;AAC5B,eAAS,eAAe,GAAG,KAAmB;AAAA,IAChD;AAEA,QAAI,aAAa,KAAK,GAAG;AACvB,eAAS,gCAAmC;AAAA,IAC9C;AAAA,EACF;AAEA,SACE,mDAAc,2CAAb,EACC;AAAA,uDAAC,WAAQ,OAAM,gBACb;AAAA,MAAc;AAAA,MAAb;AAAA,QACC,cAAW;AAAA,QACX,WAAU;AAAA,QAET,0CACC,mDAAC,eAAY,WAAW,oBAAxB;AAAA;AAAA;AAAA;AAAA,eAA0C,IAE1C,mDAAC,cAAW,WAAW,oBAAvB;AAAA;AAAA;AAAA;AAAA,eAAyC;AAAA;AAAA,MAP7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,KAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,IACA,mDAAc,2CAAb,EACC;AAAA,MAAc;AAAA,MAAb;AAAA,QACC,OAAM;AAAA,QACN,YAAY;AAAA,QACZ,WAAU;AAAA,QAEV;AAAA,6DAAc,2CAAb,EAAmB,WAAU,4BAA2B,4BAAzD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAc;AAAA,YAAb;AAAA,cACC,OAAO,gBAAgB;AAAA,cACvB,eAAe;AAAA,cACf,WAAW;AAAA,gBACT;AAAA,gBACA,aAAa,SAAS,IAClB,gBACA,aAAa,SAAS,IACtB,gBACA;AAAA,cACN;AAAA,cAEC,uBAAa,IAAI,CAAC,EAAE,OAAO,OAAO,MAAM,MACvC;AAAA,gBAAc;AAAA,gBAAb;AAAA,kBAEC;AAAA,kBACA,WAAW;AAAA,oBACT;AAAA,oBACA,UAAU,eACN,sEACA;AAAA,kBACN;AAAA,kBAEA;AAAA;AAAA,sBAAC;AAAA;AAAA,wBACC,WAAW;AAAA,0BACT;AAAA,0BACA,UAAU,eACN,wBACA;AAAA,wBACN;AAAA,wBAEA;AAAA,0BAAC;AAAA;AAAA,4BACC,WAAW;AAAA,8BACT;AAAA,8BACA,UAAU,eAAe,UAAU;AAAA,4BACrC;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKA;AAAA;AAAA,sBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcA;AAAA,oBACA,mDAAC,SACC;AAAA,yEAAC,UAAK,WAAU,WAAW,mBAA3B;AAAA;AAAA;AAAA;AAAA,6BAAiC;AAAA,sBACjC;AAAA,wBAAC;AAAA;AAAA,0BACC,KAAK;AAAA,0BACL,KAAK,GAAG;AAAA,0BACR,WAAU;AAAA;AAAA,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIA;AAAA,yBANF;AAAA;AAAA;AAAA;AAAA,2BAOA;AAAA;AAAA;AAAA,gBA/BK;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAiCA,CACD;AAAA;AAAA,YA/CH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAgDA;AAAA;AAAA;AAAA,MAxDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAyDA,KA1DF;AAAA;AAAA;AAAA;AAAA,WA2DA;AAAA,OAxEF;AAAA;AAAA;AAAA;AAAA,SAyEA;AAEJ;;;AC3HQ,IAAAA,0BAAA;AAND,IAAM,cAAc,MAAmB;AAC5C,QAAM,EAAE,KAAK,IAAI,aAAa;AAE9B,SACE,oDAAc,2CAAb,EACC;AAAA,wDAAc,2CAAb,EAAqB,WAAU,0FAC9B,8DAAC,cAAY,GAAG,QAAhB;AAAA;AAAA;AAAA;AAAA,WAAsB,KADxB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,oDAAc,2CAAb,EACC;AAAA,MAAc;AAAA,MAAb;AAAA,QACC,OAAM;AAAA,QACN,YAAY;AAAA,QACZ,WAAW;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,QAEA;AAAA,8DAAc,2CAAb,EAAkB,WAAU,gDAC3B;AAAA,gEAAC,cAAY,GAAG,MAAM,MAAM,MAA5B;AAAA;AAAA;AAAA;AAAA,mBAAgC;AAAA,YAChC,oDAAC,UAAK,WAAU,gBAAgB,eAAK,QAArC;AAAA;AAAA;AAAA;AAAA,mBAA0C;AAAA,eAF5C;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,oDAAc,2CAAb,EAAuB,WAAU,oBAAlC;AAAA;AAAA;AAAA;AAAA,iBAAmD;AAAA,UACnD,oDAAc,2CAAb,EAAkB,WAAU,iCAC3B,8DAAC,QAAK,QAAO,iBAAgB,QAAO,QAClC;AAAA,YAAC;AAAA;AAAA,cACC,OAAM;AAAA,cACN,SAAQ;AAAA,cACR,MAAK;AAAA,cACL,SAAS,CAAC,MAAM,EAAE,gBAAgB;AAAA,cAClC,WAAU;AAAA,cAEV,cAAW;AAAA,cAEX;AAAA,oEAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,uBAAY;AAAA,gBACZ,oDAAC,UAAK,uBAAN;AAAA;AAAA;AAAA;AAAA,uBAAa;AAAA;AAAA;AAAA,YAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAWA,KAZF;AAAA;AAAA;AAAA;AAAA,iBAaA,KAdF;AAAA;AAAA;AAAA;AAAA,iBAeA;AAAA;AAAA;AAAA,MA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA6BA,KA9BF;AAAA;AAAA;AAAA;AAAA,WA+BA;AAAA,OAnCF;AAAA;AAAA;AAAA;AAAA,SAoCA;AAEJ;;;AC/BU,IAAAC,0BAAA;AAXH,IAAM,SAAS,MAAmB;AACvC,QAAM,gBACJ;AAEF,SACE,oDAAC,YAAO,WAAU,wIAChB;AAAA,wDAAC,aACC;AAAA,MAAC;AAAA;AAAA,QACC,IAAG;AAAA,QACH,WAAU;AAAA,QAEV;AAAA,8DAAC,SAAI,KAAI,oBAAmB,OAAO,IAAI,QAAQ,IAAI,KAAI,UAAvD;AAAA;AAAA;AAAA;AAAA,iBAA8D;AAAA,UAC9D,oDAAC,UAAK,WAAU,QAAO,0BAAvB;AAAA;AAAA;AAAA;AAAA,iBAAiC;AAAA;AAAA;AAAA,MALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,KAPF;AAAA;AAAA;AAAA;AAAA,WAQA;AAAA,IACA,oDAAC,aAAQ,WAAU,2BACjB;AAAA,0DAAC,WAAQ,OAAM,SACb;AAAA,QAAC;AAAA;AAAA,UACC,cAAW;AAAA,UACX,UAAQ;AAAA,UACR,WAAW,EAAG,eAAe,oBAAoB;AAAA,UAEjD,8DAAC,wBAAqB,MAAM,MAA5B;AAAA;AAAA;AAAA;AAAA,iBAAgC;AAAA;AAAA,QALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,KAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,oDAAC,WAAQ,OAAM,UACb;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,WAAW;AAAA,UACX,cAAW;AAAA,UAEX,8DAAC,gBAAa,MAAM,MAApB;AAAA;AAAA;AAAA;AAAA,iBAAwB;AAAA;AAAA,QAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,KAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,oDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,MACZ,oDAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,aAAa;AAAA,SApBf;AAAA;AAAA;AAAA;AAAA,WAqBA;AAAA,OA/BF;AAAA;AAAA;AAAA;AAAA,SAgCA;AAEJ;;;ACtCQ,IAAAC,0BAAA;AAJD,IAAM,aAAa,CAAC,EAAE,KAAK,MAAa;AAC7C,SACE,oDAAC,uBAAoB,MACnB,8DAAC,SAAI,WAAU,wBACb;AAAA,wDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,IACR,oDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA,SAGA,KAJF;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ;;;AJqBS,IAAAC,0BAAA;AAFM,SAAR,WAA4B;AACjC,QAAM,EAAE,KAAK,IAAI,cAAc;AAC/B,SAAO,oDAAC,cAAW,QAAZ;AAAA;AAAA;AAAA;AAAA,SAAwB;AACjC;",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
