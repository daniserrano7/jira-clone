{"version":3,"file":"project.mock-77dfe5aa.js","sources":["../../src/domain/category/category.ts","../../src/domain/comment/comment.mock.ts","../../src/domain/priority/priority.mock.ts","../../src/domain/issue/issue.mock.ts","../../src/domain/category/category.mock.ts","../../src/domain/project/project.mock.ts"],"sourcesContent":["import { Issue } from \"@domain/issue\";\n\nexport type CategoryId = string;\nexport type CategoryType = typeof categoryTypes[number];\nexport const categoryTypes = [\"TODO\", \"IN_PROGRESS\", \"DONE\"] as const;\n\nexport const categoryTypeDict: Record<CategoryType, string> = {\n  TODO: \"To do\",\n  IN_PROGRESS: \"In progress\",\n  DONE: \"Done\",\n};\n\nexport interface Category {\n  id: CategoryId;\n  type: CategoryType;\n  name: string;\n  issues: Issue[];\n  order: number;\n  createdAt?: number;\n  updatedAt?: number;\n}\n","import { userMock1, usersMock } from \"@domain/user\";\nimport { Comment } from \"./comment\";\n\nconst createdAt = Date.now();\nconst updatedAt = Date.now();\n\nexport const commentMock1: Comment = {\n  id: \"92149ee5-0459-4286-8323-1542e1295154\",\n  user: usersMock[3], // Jessie\n  message:\n    \"Depending on the user, some features are restricted. For example, only the reporter of an issue can edit the title and description.\",\n  createdAt,\n  updatedAt,\n};\n\nexport const commentMock2: Comment = {\n  id: \"3375b7ea-425d-4bd3-a728-c8888b63a7f2\",\n  user: usersMock[7], // Little Green Men\n  message: \"And only the original poster of a comment can edit or delete it!\",\n  createdAt,\n  updatedAt,\n};\n\nexport const commentMock3: Comment = {\n  id: \"ee000718-85e5-44ac-91e2-e29340fb0b61\",\n  user: usersMock[5], // Mr. Potato\n  message:\n    \"This is not they only accessible feature implemented. By using Radix UI, components like select, dialog or checkboxes are accessible by default, and you can handle them with the keyboard.\",\n  createdAt,\n  updatedAt,\n};\n\nexport const commentMock4: Comment = {\n  id: \"c0db6d6f-f395-4882-8bf4-e644f0e45460\",\n  user: userMock1, // Daniel Serrano\n  message:\n    \"By the way, the 404 error will be triggered if you modify the URL to any non existing path.\",\n  createdAt,\n  updatedAt,\n};\n\nexport const commentMock5: Comment = {\n  id: \"6c57eff9-f310-470a-b8e9-0f5234b63f5a\",\n  user: usersMock[6], // Ms. Potato\n  message:\n    \"By the way, the 404 error will be triggered if you modify the URL to any non existing path.\",\n  createdAt,\n  updatedAt,\n};\n","import { Priority } from \"./priority\";\n\nexport const prioritiesMock: Priority[] = [\n  {\n    id: \"low\",\n    name: \"Low\",\n    order: 0,\n  },\n  {\n    id: \"medium\",\n    name: \"Medium\",\n    order: 1,\n  },\n  {\n    id: \"high\",\n    name: \"High\",\n    order: 2,\n  },\n];\n\nexport const priorityLow = prioritiesMock[0];\nexport const priorityMedium = prioritiesMock[1];\nexport const priorityHigh = prioritiesMock[2];\n","import { userMock1, userMock2, usersMock } from \"@domain/user\";\nimport {\n  commentMock1,\n  commentMock2,\n  commentMock3,\n  commentMock4,\n  commentMock5,\n} from \"@domain/comment\";\nimport { priorityLow, priorityMedium, priorityHigh } from \"@domain/priority\";\nimport { Issue } from \"./issue\";\n\nconst createdAt = new Date(\"2022-01-18 11:00\").valueOf();\n\n// PROJECT 1\nexport const todoIssuesMock1: Issue[] = [];\n\nexport const inProgressIssuesMock1: Issue[] = [\n  {\n    id: \"ea07f7ca-13e9-4143-b623-f5713adef81a\",\n    name: \"HINT: Open two tabs to see events in real time.\",\n    description:\n      \"With the same project open in two different tabs, try making some changes on one of them. The result will be reflected instantly on the other. This will happen with every other user with the app open.\",\n    reporter: userMock1, // Daniel Serrano\n    asignee: userMock2, // Woody\n    comments: [],\n    priority: priorityHigh,\n    categoryType: \"TODO\",\n    createdAt,\n    updatedAt: createdAt,\n  },\n  {\n    id: \"23717058-379a-447a-a215-e425a124154f\",\n    name: \"HINT: Try to login and interact with different users. \",\n    description:\n      \"This will be reflected on the UI (e. g. which user created and issue or wrote a comment). A user can only see the projects they are assigned to. You can try this by creating a new project at the /projects page. To logout, go to the avatar dropdown (top right).\",\n    reporter: userMock2, // Woody\n    asignee: usersMock[2], // Buzz Lightyear\n    comments: [commentMock1, commentMock2],\n    priority: priorityHigh,\n    categoryType: \"TODO\",\n    createdAt,\n    updatedAt: new Date(\"2022-01-23 17:50\").valueOf(),\n  },\n];\n\nexport const doneIssuesMock1: Issue[] = [\n  {\n    id: \"cb3eb5e6-299d-4e1a-8521-a5541f8403e4\",\n    name: \"HINT: Check the URL when filter or navigate. Try navigate directly to the URL.\",\n    description:\n      \"All the routing is handled server-side thanks to Remix Run framework. Everytime you apply a filter, a new request is sent, the data is revalidated in the server and the page HTML is resent to the server. This is very useful when sharing a link. The other person will receive the same exact result as you.\",\n    reporter: userMock1,\n    asignee: userMock1,\n    comments: [],\n    priority: priorityLow,\n    categoryType: \"TODO\",\n    createdAt,\n    updatedAt: new Date(\"2022-01-23 10:51\").valueOf(),\n  },\n  {\n    id: \"8264e3fc-dd97-4abe-9612-deee6472e5c4\",\n    name: \"HINT: Try key combinations to execute actions. They are indicated on the UI.\",\n    description:\n      'E. g., try Shift + N on the board page to create a new issue. By default, it will be created under the category \"TO DO\". Another common key combination is using Shift + S to save changes (try it on this very issue!).',\n    reporter: userMock1,\n    asignee: userMock1,\n    comments: [commentMock3],\n    priority: priorityMedium,\n    categoryType: \"TODO\",\n    createdAt,\n    updatedAt: new Date(\"2022-01-23 02:04\").valueOf(),\n  },\n  {\n    id: \"4db55cbf-222d-424a-b23b-08e61534c706\",\n    name: \"HINT: Check network status when navigating to an error page.\",\n    description:\n      'There are two sections on the sidebar that will intentionally throw an error. The section \"Server error\" will trigger a 500 error response, while \"Not found\" returns a 404 error. You can check the status response on the browser network tab and see how it is handled on the UI.',\n    reporter: userMock1,\n    asignee: userMock1,\n    comments: [commentMock4, commentMock5],\n    priority: priorityMedium,\n    categoryType: \"TODO\",\n    createdAt,\n    updatedAt: new Date(\"2022-01-23 15:28\").valueOf(),\n  },\n];\n\n// PROJECT 2\nexport const todoIssuesMock2: Issue[] = [\n  {\n    id: \"f3efefcf-7859-4241-8b03-4ae815183355\",\n    name: \"Add and display issue timestamps\",\n    description:\n      \"Id should be create automatically on new Issue(). It must be displayed on issue panel, as well as an updatedAt parameter\",\n    reporter: userMock1,\n    asignee: userMock2,\n    comments: [],\n    priority: priorityMedium,\n    categoryType: \"TODO\",\n    createdAt,\n    updatedAt: new Date(\"2022-01-18 11:01\").valueOf(),\n  },\n  {\n    id: \"6bf6a1f4-20bb-492b-8ea4-4aa18efeb062\",\n    name: \"Add projects section and the ability to create multiple projects\",\n    description:\n      \"Router would be needed. Can create and edit project, as well as add users to that particular project\",\n    reporter: userMock1,\n    asignee: userMock1,\n    comments: [],\n    priority: priorityLow,\n    categoryType: \"TODO\",\n    createdAt,\n    updatedAt: new Date(\"2022-01-23 14:28\").valueOf(),\n  },\n];\n\nexport const inProgressIssuesMock2: Issue[] = [\n  {\n    id: \"812664aa-82be-418b-9ba3-1d7acdcd6be2\",\n    name: \"Add dark mode\",\n    description: \"\",\n    reporter: userMock1,\n    asignee: userMock1,\n    comments: [],\n    priority: priorityHigh,\n    categoryType: \"IN_PROGRESS\",\n    createdAt,\n    updatedAt: createdAt,\n  },\n];\n\nexport const doneIssuesMock2: Issue[] = [];\n\nexport const defaultIssuesIds = [\n  todoIssuesMock1,\n  inProgressIssuesMock1,\n  doneIssuesMock1,\n  todoIssuesMock2,\n  inProgressIssuesMock2,\n  doneIssuesMock2,\n]\n  .flat()\n  .map((issue) => issue.id);\n","import { Category, categoryTypes, categoryTypeDict } from \"@domain/category\";\nimport {\n  todoIssuesMock1,\n  inProgressIssuesMock1,\n  doneIssuesMock1,\n  todoIssuesMock2,\n  inProgressIssuesMock2,\n  doneIssuesMock2,\n} from \"@domain/issue\";\n\nconst createdAt = new Date(\"2022-01-01\").valueOf();\nconst updatedAt = new Date(\"2022-01-01\").valueOf();\n\nconst ids1 = [\n  \"1e8877a7-91dc-46de-bce0-f077ad922fc8\",\n  \"46964edd-62e0-4c2f-90bf-e275ee087433\",\n  \"c1278ad3-29b3-422c-8219-54bb66b26ff4\",\n];\nconst issuesMock1 = [todoIssuesMock1, inProgressIssuesMock1, doneIssuesMock1];\n\nconst ids2 = [\n  \"bbb348d5-ef02-447c-94f5-5fbf1ceeac07\",\n  \"14055a19-1a79-4b16-90fb-811652e33128\",\n  \"aa102bcb-335c-4d82-8392-058f6172ebe8\",\n];\nconst issuesMock2 = [todoIssuesMock2, inProgressIssuesMock2, doneIssuesMock2];\n\nexport const categoriesMock1: Category[] = categoryTypes.map((categoryType, index) => {\n  const id = ids1[index];\n  const name = categoryTypeDict[categoryType];\n  const type = categoryType;\n  const order = index;\n  const issues = issuesMock1[index];\n\n  return {\n    id,\n    name,\n    issues,\n    type,\n    order,\n    createdAt,\n    updatedAt,\n  };\n});\n\nexport const categoriesMock2: Category[] = categoryTypes.map((categoryType, index) => {\n  const id = ids2[index];\n  const name = categoryTypeDict[categoryType];\n  const type = categoryType;\n  const order = index;\n  const issues = issuesMock2[index];\n\n  return {\n    id,\n    name,\n    type,\n    issues,\n    order,\n    createdAt,\n    updatedAt,\n  };\n});\n","import { Project } from \"./project\";\nimport { usersMock } from \"@domain/user\";\nimport { categoriesMock1, categoriesMock2 } from \"@domain/category\";\n\nexport const projectMock1: Project = {\n  id: \"jira-clone\",\n  name: \"JIRA Clone\",\n  description: \"Software project\",\n  users: usersMock,\n  categories: categoriesMock1,\n  image:\n    \"https://admin.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10400?size=xxlarge\",\n  createdAt: new Date(\"2023-01-01 10:00\").valueOf(),\n};\n\nexport const projectMock2: Project = {\n  id: \"second-project\",\n  name: \"Second project\",\n  description:\n    \"Super long description to test how it clamps on project card in the projects page and in the project sidebar\",\n  users: usersMock.slice(0, 3), // Only the first 3 users\n  categories: categoriesMock2,\n  image:\n    \"https://admin.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10401?size=xxlarge\",\n  createdAt: new Date(\"2023-01-01 11:00\").valueOf(),\n};\n\nexport const projectsMock: Project[] = [projectMock1, projectMock2];\n"],"names":["categoryTypes","categoryTypeDict","createdAt","updatedAt","commentMock1","usersMock","commentMock2","commentMock3","commentMock4","userMock1","commentMock5","prioritiesMock","priorityLow","priorityMedium","priorityHigh","todoIssuesMock1","inProgressIssuesMock1","userMock2","doneIssuesMock1","todoIssuesMock2","inProgressIssuesMock2","doneIssuesMock2","issue","ids1","issuesMock1","ids2","issuesMock2","categoriesMock1","categoryType","index","id","name","type","order","issues","categoriesMock2","projectMock1","projectMock2","projectsMock"],"mappings":"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"}