{"version":3,"file":"title-a6a809d3.js","sources":["../../src/utils/text-are-only-spaces.ts","../../src/app/components/title/title.tsx"],"sourcesContent":["export const textAreOnlySpaces = (text: string): boolean => {\n  return /^( )\\1*$/.test(text);\n};\n","import { useState } from \"react\";\nimport cx from \"classix\";\nimport { TextareaAutosize } from \"@app/components/textarea-autosize\";\nimport { textAreOnlySpaces } from \"@utils/text-are-only-spaces\";\n\nconst DEFAULT_MAX_LENGTH = 80;\n\nexport const Title = ({\n  initTitle = \"\",\n  readOnly,\n  maxLength = DEFAULT_MAX_LENGTH,\n  error,\n  placeholder = \"Write the title\",\n}: TitleProps): JSX.Element => {\n  const [title, setTitle] = useState<string>(initTitle);\n  const [isFocus, setIsFocus] = useState<boolean>(true);\n\n  const isMaxLength = title.length >= maxLength;\n  const requireError =\n    error && (title.length === 0 || textAreOnlySpaces(title));\n\n  const onFocus = () => {\n    if (!readOnly) setIsFocus(true);\n  };\n  const onBlur = () => setIsFocus(false);\n\n  const updateTitle = (newTitle: string) => {\n    if (newTitle.length > maxLength) return;\n\n    setTitle(newTitle);\n  };\n\n  return (\n    <div className=\"relative\">\n      <TextareaAutosize\n        name=\"title\"\n        value={title}\n        setValue={updateTitle}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        textareaClassName={cx(\n          \"font-primary-black text-2xl\",\n          requireError &&\n            \"focus-visible:outline-border-danger outline outline-2 outline-border-danger\"\n        )}\n        autofocus\n      />\n      {requireError && (\n        <span className=\"ml-3 font-primary-light text-sm text-font-danger\">\n          {error}\n        </span>\n      )}\n      {isFocus && (\n        <span\n          className={cx(\n            \"absolute right-0 top-full font-primary-light\",\n            isMaxLength ? \"text-font-danger\" : \"text-font-subtlest\"\n          )}\n        >\n          {title.length} / {maxLength}\n        </span>\n      )}\n    </div>\n  );\n};\n\ninterface TitleProps {\n  initTitle?: string;\n  readOnly?: boolean;\n  maxLength?: number;\n  error?: string;\n  placeholder?: string;\n}\n"],"names":["textAreOnlySpaces","text","DEFAULT_MAX_LENGTH","Title","initTitle","readOnly","maxLength","error","placeholder","title","setTitle","useState","isFocus","setIsFocus","isMaxLength","requireError","jsxs","jsx","TextareaAutosize","newTitle","cx"],"mappings":"2LAAa,MAAAA,EAAqBC,GACzB,WAAW,KAAKA,CAAI,ECI7BC,EAAA,GAEOC,EAAA,CAAA,CAAe,UAAAC,EAAA,GACR,SAAAC,EACZ,UAAAC,EAAAJ,EACY,MAAAK,EACZ,YAAAC,EAAA,iBAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAP,CAAA,EACA,CAAAQ,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEAG,EAAAL,EAAA,QAAAH,EACAS,EAAAR,IAAAE,EAAA,SAAA,GAAAT,EAAAS,CAAA,GAcA,OAAAO,EAAA,MAAA,CAAA,UAAA,WAAA,SAAA,CAEIC,EAAAC,EAAC,CAAA,KAAA,QACM,MAAAT,EACE,SAVbU,GAAA,CACEA,EAAA,OAAAb,GAEAI,EAAAS,CAAA,CAAiB,EAQH,YAAAX,EACV,SAAAH,EACA,QAlBN,IAAA,CACEA,GAAeQ,EAAA,EAAA,CAAe,EAkB1B,OAhBN,IAAAA,EAAA,EAAA,EAiBM,kBAAAO,EACmB,8BACjBL,GAAA,6EAEE,EACJ,UAAA,EACS,CAAA,EACXA,GAAAE,EAAA,OAAA,CAAA,UAAA,mDAAA,SAAAV,EAAA,EAIEK,GAAAI,EAGA,OAAC,CAAA,UAAAI,EACY,+CACTN,EAAA,mBAAA,oBACmC,EACrC,SAAA,CAECL,EAAA,OAAM,MAAOH,CAAI,CAAA,CAAA,CACpB,CAAA,CAAA,CAIR"}