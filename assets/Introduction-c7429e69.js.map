{"version":3,"file":"Introduction-c7429e69.js","sources":["../../src/app/stories/color-palettes.tsx","../../src/app/stories/Introduction.mdx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport cx from \"classix\";\nimport { Tooltip } from \"@app/components/tooltip\";\n\ntype Palettes = Record<string, string[]>;\n\nexport const ColorPalettes = () => {\n  // Creates palette like: [\"Lime100\", \"Lime200\", \"Lime300\", ...]\n  const creatColorVariables = (base: string, to = 10) => {\n    return Array.from({ length: to }, (_, i) => {\n      return `${base}${(i + 1) * 100}`;\n    });\n  };\n\n  const renderPaletteWrapper = (palettes: Palettes) => (\n    <div className=\"grid grid-cols-2 gap-4\">\n      {Object.entries(palettes).map(([name, colors]) => (\n        <div key={name} className=\"mb-2\">\n          <h4 className=\"mb-2 font-medium\">{name}</h4>\n          <ColorPalette colors={colors} />\n        </div>\n      ))}\n    </div>\n  );\n\n  const colorPalettes: Palettes = {\n    Lime: creatColorVariables(\"Lime\"),\n    Blue: creatColorVariables(\"Blue\"),\n    Green: creatColorVariables(\"Green\"),\n    Yellow: creatColorVariables(\"Yellow\"),\n    Orange: creatColorVariables(\"Orange\"),\n    Red: creatColorVariables(\"Red\"),\n  };\n\n  const lightPalettes: Palettes = {\n    Solid: [\"Neutral0\", ...creatColorVariables(\"Neutral\"), \"Neutral1100\"],\n    Alpha: [\n      \"Neutral100A\",\n      \"Neutral200A\",\n      \"Neutral300A\",\n      \"Neutral400A\",\n      \"Neutral500A\",\n    ],\n  };\n\n  const darkPalettes: Palettes = {\n    DarkSolid: [\n      \"DarkNeutral-100\",\n      \"DarkNeutral0\",\n      \"DarkNeutral100\",\n      \"DarkNeutral200\",\n      \"DarkNeutral250\",\n      \"DarkNeutral300\",\n      \"DarkNeutral350\",\n      \"DarkNeutral400\",\n      \"DarkNeutral500\",\n      \"DarkNeutral600\",\n      \"DarkNeutral700\",\n      \"DarkNeutral800\",\n      \"DarkNeutral900\",\n      \"DarkNeutral1000\",\n      \"DarkNeutral1100\",\n    ],\n    DarkAlpha: [\n      \"DarkNeutral-100A\",\n      \"DarkNeutral100A\",\n      \"DarkNeutral200A\",\n      \"DarkNeutral250A\",\n      \"DarkNeutral300A\",\n      \"DarkNeutral350A\",\n      \"DarkNeutral400A\",\n      \"DarkNeutral500A\",\n    ],\n  };\n\n  return (\n    <div className=\"sb-unstyled flex flex-col gap-8\">\n      {renderPaletteWrapper(colorPalettes)}\n      <div>\n        <h3 className=\"mb-2 text-xl font-bold text-font\">\n          Light mode neutrals\n        </h3>\n        <div\n          style={{ background: \"var(--Neutral100)\" }}\n          className=\"rounded p-2 text-[var(--Neutral1000)]\"\n        >\n          {renderPaletteWrapper(lightPalettes)}\n        </div>\n      </div>\n      <div>\n        <h3 className=\"mb-2 text-xl font-bold text-font\">Dark mode neutrals</h3>\n        <div\n          style={{ background: \"var(--DarkNeutral0)\" }}\n          className=\"rounded p-2 text-[var(--DarkNeutral900)]\"\n        >\n          {renderPaletteWrapper(darkPalettes)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ColorPalette = ({ colors }: ColorPaletteProps) => {\n  const getColorValue = (variable: string) => {\n    const htmlElement = document.documentElement;\n    const style = getComputedStyle(htmlElement);\n    return style.getPropertyValue(variable);\n  };\n\n  const hexToRgb = (hex: string) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result\n      ? {\n          r: parseInt(result[1], 16),\n          g: parseInt(result[2], 16),\n          b: parseInt(result[3], 16),\n        }\n      : null;\n  };\n\n  const removeHexTransparency = (hex: string) => {\n    if (hex.length === 7) return hex;\n\n    return `#${hex.slice(-6)}`;\n  };\n\n  const isAlphaVariable = (colorVariable: string) =>\n    colorVariable.slice(-1) === \"A\";\n\n  const isDarkVariable = (colorVariable: string) =>\n    colorVariable.includes(\"Dark\");\n\n  const isTextContrast = (colorVariable: string) => {\n    if (isAlphaVariable(colorVariable)) {\n      return !isDarkVariable(colorVariable);\n    }\n\n    const hexColor = getColorValue(colorVariable);\n    const rgb = hexToRgb(removeHexTransparency(hexColor));\n\n    if (!rgb) {\n      return false;\n    }\n\n    const { r, g, b } = rgb;\n\n    return r * 0.299 + g * 0.587 + b * 0.114 > 150;\n  };\n\n  return (\n    <div className=\"rounded\">\n      {colors.map((color, i) => {\n        const colorVariable = `--${color}`;\n\n        return (\n          <div\n            key={i}\n            className={cx(\n              \"flex justify-between p-2 text-xs\",\n              i === 0 ? \"rounded-t\" : \"\",\n              i === colors.length - 1 ? \"rounded-b\" : \"\"\n            )}\n            style={{\n              background: `var(${colorVariable})`,\n              color: isTextContrast(colorVariable)\n                ? \"var(--Neutral1000)\"\n                : \"var(--Neutral0)\",\n            }}\n          >\n            <span>{color}</span>\n            <CopyButton colorValue={getColorValue(colorVariable)} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\ninterface ColorPaletteProps {\n  colors: string[];\n}\n\nconst CopyButton = ({ colorValue }: CopyButtonProps) => {\n  const [hover, setHover] = useState(false);\n  const [isCopied, setIsCopied] = useState(false);\n  const [buttonWidth, setButtonWidth] = useState(0);\n\n  const columnRef = useRef() as React.MutableRefObject<HTMLButtonElement>;\n\n  const copyTextToClipboard = async (text: string) => {\n    if (\"clipboard\" in navigator) {\n      return await navigator.clipboard.writeText(text);\n    }\n\n    return \"\";\n  };\n\n  const handleCopyClick = () => {\n    copyTextToClipboard(colorValue)\n      .then(() => {\n        setIsCopied(true);\n        setTimeout(() => {\n          setIsCopied(false);\n        }, 1500);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleMouseEnter = () => {\n    setHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setHover(false);\n  };\n\n  useEffect(() => {\n    if (columnRef.current) {\n      setButtonWidth(columnRef.current.offsetWidth);\n    }\n  }, []);\n\n  return (\n    <Tooltip\n      title={\n        isCopied ? \"Copied!\" : `Copy '${colorValue.toUpperCase()}' to clipboard`\n      }\n      className=\"z-50\"\n    >\n      <button\n        ref={columnRef}\n        onClick={handleCopyClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        className=\"rounded p-1 hover:bg-background-neutral\"\n        style={{\n          width: buttonWidth ? `${buttonWidth}px` : \"auto\",\n        }}\n      >\n        {hover ? \"Copy\" : colorValue}\n      </button>\n    </Tooltip>\n  );\n};\n\ninterface CopyButtonProps {\n  colorValue: string;\n}\n","import { Meta } from \"@storybook/blocks\";\nimport cx from \"classix\";\nimport Code from \"./assets/code-brackets.svg\";\nimport Colors from \"./assets/colors.svg\";\nimport Comments from \"./assets/comments.svg\";\nimport Direction from \"./assets/direction.svg\";\nimport Flow from \"./assets/flow.svg\";\nimport Plugin from \"./assets/plugin.svg\";\nimport Repo from \"./assets/repo.svg\";\nimport StackAlt from \"./assets/stackalt.svg\";\nimport { ColorPalettes } from \"./color-palettes\";\n\n<style>\n  {`\n    html {\n      background: var(--color-elevation-surface);\n      color: var(--color-font);\n    }\n\n    h1, h2 {\n      color: var(--color-font) !important;\n    }\n\n    .sbdocs {\n      background: none;\n    }\n  `}\n</style>\n\n<Meta title=\"Example/Introduction\" />\n\n# Design System\n\n## Color palette\n\n<ColorPalettes />\n"],"names":["ColorPalettes","creatColorVariables","base","to","_","i","renderPaletteWrapper","palettes","jsx","name","colors","jsxs","ColorPalette","colorPalettes","lightPalettes","darkPalettes","getColorValue","variable","htmlElement","hexToRgb","hex","result","removeHexTransparency","isAlphaVariable","colorVariable","isDarkVariable","isTextContrast","hexColor","rgb","r","g","b","color","cx","CopyButton","colorValue","hover","setHover","useState","isCopied","setIsCopied","buttonWidth","setButtonWidth","columnRef","useRef","copyTextToClipboard","text","handleCopyClick","err","handleMouseEnter","handleMouseLeave","useEffect","Tooltip","_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout"],"mappings":"2vBAMO,MAAMA,EAAgB,IAAM,CAEjC,MAAMC,EAAsB,CAACC,EAAcC,EAAK,KACvC,MAAM,KAAK,CAAE,OAAQA,GAAM,CAACC,EAAGC,IAC7B,GAAGH,CAAI,IAAIG,EAAI,GAAK,GAAG,EAC/B,EAGGC,EAAwBC,GAC5BC,EAAC,OAAI,UAAU,yBACZ,gBAAO,QAAQD,CAAQ,EAAE,IAAI,CAAC,CAACE,EAAMC,CAAM,IACzCC,EAAA,MAAA,CAAe,UAAU,OACxB,SAAA,CAACH,EAAA,KAAA,CAAG,UAAU,mBAAoB,SAAKC,EAAA,EACvCD,EAACI,GAAa,OAAAF,EAAgB,CAAA,GAFtBD,CAGV,CACD,CACH,CAAA,EAGII,EAA0B,CAC9B,KAAMZ,EAAoB,MAAM,EAChC,KAAMA,EAAoB,MAAM,EAChC,MAAOA,EAAoB,OAAO,EAClC,OAAQA,EAAoB,QAAQ,EACpC,OAAQA,EAAoB,QAAQ,EACpC,IAAKA,EAAoB,KAAK,CAAA,EAG1Ba,EAA0B,CAC9B,MAAO,CAAC,WAAY,GAAGb,EAAoB,SAAS,EAAG,aAAa,EACpE,MAAO,CACL,cACA,cACA,cACA,cACA,aACF,CAAA,EAGIc,EAAyB,CAC7B,UAAW,CACT,kBACA,eACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACA,iBACF,EACA,UAAW,CACT,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACF,CAAA,EAIA,OAAAJ,EAAC,MAAI,CAAA,UAAU,kCACZ,SAAA,CAAAL,EAAqBO,CAAa,IAClC,MACC,CAAA,SAAA,CAACL,EAAA,KAAA,CAAG,UAAU,mCAAmC,SAEjD,sBAAA,EACAA,EAAC,MAAA,CACC,MAAO,CAAE,WAAY,mBAAoB,EACzC,UAAU,wCAET,WAAqBM,CAAa,CAAA,CACrC,CAAA,EACF,IACC,MACC,CAAA,SAAA,CAACN,EAAA,KAAA,CAAG,UAAU,mCAAmC,SAAkB,qBAAA,EACnEA,EAAC,MAAA,CACC,MAAO,CAAE,WAAY,qBAAsB,EAC3C,UAAU,2CAET,WAAqBO,CAAY,CAAA,CACpC,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,EAEMH,EAAe,CAAC,CAAE,OAAAF,KAAgC,CAChD,MAAAM,EAAiBC,GAAqB,CAC1C,MAAMC,EAAc,SAAS,gBAEtB,OADO,iBAAiBA,CAAW,EAC7B,iBAAiBD,CAAQ,CAAA,EAGlCE,EAAYC,GAAgB,CAC1B,MAAAC,EAAS,4CAA4C,KAAKD,CAAG,EACnE,OAAOC,EACH,CACE,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,EACzB,EAAG,SAASA,EAAO,CAAC,EAAG,EAAE,CAE3B,EAAA,IAAA,EAGAC,EAAyBF,GACzBA,EAAI,SAAW,EAAUA,EAEtB,IAAIA,EAAI,MAAM,EAAE,CAAC,GAGpBG,EAAmBC,GACvBA,EAAc,MAAM,EAAE,IAAM,IAExBC,EAAkBD,GACtBA,EAAc,SAAS,MAAM,EAEzBE,EAAkBF,GAA0B,CAC5C,GAAAD,EAAgBC,CAAa,EACxB,MAAA,CAACC,EAAeD,CAAa,EAGhC,MAAAG,EAAWX,EAAcQ,CAAa,EACtCI,EAAMT,EAASG,EAAsBK,CAAQ,CAAC,EAEpD,GAAI,CAACC,EACI,MAAA,GAGT,KAAM,CAAE,EAAAC,EAAG,EAAAC,EAAG,EAAAC,CAAA,EAAMH,EAEpB,OAAOC,EAAI,KAAQC,EAAI,KAAQC,EAAI,KAAQ,GAAA,EAI3C,OAAAvB,EAAC,OAAI,UAAU,UACZ,WAAO,IAAI,CAACwB,EAAO3B,IAAM,CAClB,MAAAmB,EAAgB,KAAKQ,CAAK,GAG9B,OAAArB,EAAC,MAAA,CAEC,UAAWsB,EACT,mCACA5B,IAAM,EAAI,YAAc,GACxBA,IAAMK,EAAO,OAAS,EAAI,YAAc,EAC1C,EACA,MAAO,CACL,WAAY,OAAOc,CAAa,IAChC,MAAOE,EAAeF,CAAa,EAC/B,qBACA,iBACN,EAEA,SAAA,CAAAhB,EAAC,QAAM,SAAMwB,CAAA,CAAA,EACZxB,EAAA0B,EAAA,CAAW,WAAYlB,EAAcQ,CAAa,CAAG,CAAA,CAAA,CAAA,EAdjDnB,CAAA,CAiBV,CAAA,CACH,CAAA,CAEJ,EAMM6B,EAAa,CAAC,CAAE,WAAAC,KAAkC,CACtD,KAAM,CAACC,EAAOC,CAAQ,EAAIC,WAAS,EAAK,EAClC,CAACC,EAAUC,CAAW,EAAIF,WAAS,EAAK,EACxC,CAACG,EAAaC,CAAc,EAAIJ,WAAS,CAAC,EAE1CK,EAAYC,EAAAA,SAEZC,EAAsB,MAAOC,GAC7B,cAAe,UACV,MAAM,UAAU,UAAU,UAAUA,CAAI,EAG1C,GAGHC,EAAkB,IAAM,CACRF,EAAAV,CAAU,EAC3B,KAAK,IAAM,CACVK,EAAY,EAAI,EAChB,WAAW,IAAM,CACfA,EAAY,EAAK,GAChB,IAAI,CAAA,CACR,EACA,MAAOQ,GAAQ,CACd,QAAQ,IAAIA,CAAG,CAAA,CAChB,CAAA,EAGCC,EAAmB,IAAM,CAC7BZ,EAAS,EAAI,CAAA,EAGTa,EAAmB,IAAM,CAC7Bb,EAAS,EAAK,CAAA,EAGhBc,OAAAA,EAAAA,UAAU,IAAM,CACVR,EAAU,SACGD,EAAAC,EAAU,QAAQ,WAAW,CAEhD,EAAG,CAAE,CAAA,EAGHnC,EAAC4C,EAAA,CACC,MACEb,EAAW,UAAY,SAASJ,EAAW,YAAa,CAAA,iBAE1D,UAAU,OAEV,SAAA3B,EAAC,SAAA,CACC,IAAKmC,EACL,QAASI,EACT,aAAcE,EACd,aAAcC,EACd,UAAU,0CACV,MAAO,CACL,MAAOT,EAAc,GAAGA,CAAW,KAAO,MAC5C,EAEC,WAAQ,OAASN,CAAA,CACpB,CAAA,CAAA,CAGN,ECvOA,SAASkB,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAOG,EAAMC,EAAW,CACtB,SAAU,CAACC,EAAK,QAAS,CACvB,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAchB,CAAK,EAAG;AAAA,EAAMA,EAAKC,EAAM,CACnB,MAAO,sBACR,CAAA,EAAG;AAAA,EAAMD,EAAKJ,EAAY,GAAI,CAC7B,GAAI,gBACJ,SAAU,eACX,CAAA,EAAG;AAAA,EAAMI,EAAKJ,EAAY,GAAI,CAC7B,GAAI,gBACJ,SAAU,eACX,CAAA,EAAG;AAAA,EAAMI,EAAK3D,EAAe,CAAE,CAAA,CAAC,CACrC,CAAG,CACH,CACA,SAAS6D,EAAWP,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASQ,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEN,EAAoB,EAAEF,EAAM,UAAU,EACrF,OAAOQ,EAAYH,EAAKG,EAAW,OAAO,OAAO,CAAE,EAAER,EAAO,CAC1D,SAAUK,EAAKN,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAkBC,CAAK,CAC/B"}